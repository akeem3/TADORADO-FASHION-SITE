generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  category    String   @db.VarChar(50) // "male" or "female"
  subCategory String   @db.VarChar(100)
  ageGroup    String   @db.VarChar(50) // "adult" | "children" | "baby"
  price       Decimal  @db.Decimal(10, 2)
  isNew       Boolean  @default(false)
  isFeatured  Boolean  @default(false)
  isActive    Boolean  @default(true)
  stock       Int      @default(0)
  image       String   @db.Text
  hoverImage  String?  @db.Text
  description String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  orderItems OrderItem[]

  @@index([category])
  @@index([subCategory])
  @@index([ageGroup])
  @@index([isActive])
  @@index([isFeatured])
  @@index([createdAt])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  name      String?  @db.VarChar(255)
  phone     String?  @db.VarChar(20)
  address   String?  @db.Text
  city      String?  @db.VarChar(100)
  state     String?  @db.VarChar(100)
  zipCode   String?  @db.VarChar(20)
  country   String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders Order[]

  @@index([email])
}

model Order {
  id            Int      @id @default(autoincrement())
  orderNumber   String   @unique @db.VarChar(50)
  userId        Int?
  status        String   @default("pending") @db.VarChar(50) // pending, processing, shipped, delivered, cancelled
  totalAmount   Decimal  @db.Decimal(10, 2)
  shippingCost  Decimal  @default(0) @db.Decimal(10, 2)
  taxAmount     Decimal  @default(0) @db.Decimal(10, 2)
  paymentStatus String   @default("pending") @db.VarChar(50) // pending, paid, failed
  paymentMethod String?  @db.VarChar(50)
  shippingAddress String @db.Text
  billingAddress  String @db.Text
  notes         String?  @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  customerInfo  Json
  measurements  Json
  deliveryInfo  Json
  paymentInfo   Json

  // Relations
  user      User?       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@index([orderNumber])
  @@index([status])
  @@index([paymentStatus])
  @@index([createdAt])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  name      String
  image     String
  createdAt DateTime @default(now())

  // Relations
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

model Newsletter {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  @@index([email])
  @@index([isActive])
}
